<!-- main.handlebars -->

<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <title>Productos en Tiempo Real</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .cart-modal {
      position: fixed;
      top: 50%;
      right: 0;
      transform: translate(100%, -50%);
      z-index: 1050;
      width: 300px;
      background-color: white;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
      padding: 15px;
      display: none;
    }
  </style>
</head>

<body>
  <div class="container my-5">
    {{{body}}}
  </div>

  <button onclick="openCartModal()">Abrir Carrito</button>

  <div class="cart-modal" id="cartModal">
    <!-- Contenido del carrito y acciones -->
    <h4>Changuito de Compras</h4>
    <!-- Agregar aquí el contenido del carrito y botones para acciones -->

    <button onclick="closeCartModal()">Cerrar</button>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


  <script>
    // Función para agregar un producto al carrito
    function agregarAlCarrito(_id) {

      console.log('Agregando al carrito:', id, title, price);

    }
  </script>

  <script>


    // Función para abrir el modal del changuito
    function openCartModal() {
      document.getElementById('cartModal').style.display = "block";
    }

  </script>

  <script>

    // Función para cerrar el modal del changuito
    function closeCartModal() {
      document.getElementById('cartModal').style.display = "none";
    }

  </script>

  <script>

    // Función de eliminar producto (ya incluida en el código previo)
    function eliminarProducto(id) {
      Swal.fire({
        title: '¿Estás seguro?',
        text: '¡No podrás revertir esta acción!',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Sí, eliminarlo',
        cancelButtonText: 'Cancelar'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/api/products/${id}`, {
            method: 'DELETE',
          })
            .then(res => {
              if (res.ok) {
                Swal.fire(
                  'Eliminado!',
                  'El producto ha sido eliminado.',
                  'success'
                );
                location.reload(); // Recarga la vista
              } else {
                Swal.fire(
                  'Error!',
                  'No se pudo eliminar el producto.',
                  'error'
                );
              }
            })
            .catch(err => {
              console.error('Error al eliminar producto:', err);
              Swal.fire(
                'Error!',
                'Ocurrió un error al eliminar el producto.',
                'error'
              );
            });
        }
      });
    }
  </script>

  <script>

   // Función para mostrar modal de edición
function editarProducto(_id, title, description, price, product_number, stock, category) {
  Swal.fire({
    title: 'Editar Producto',
    html: `
      <div><strong>Título:</strong> <input type="text" id="editTitle" class="swal2-input" value="${title}" /></div>
      <div><strong>Descripción:</strong> <textarea id="editDescription" class="swal2-textarea">${description}</textarea></div>
      <div><strong>Precio:</strong> <input type="number" id="editPrice" class="swal2-input" value="${price}" /></div>
      <div><strong>Código:</strong> <input type="text" id="editCode" class="swal2-input" value="${product_number}" /></div>
      <div><strong>Stock:</strong> <input type="number" id="editStock" class="swal2-input" value="${stock}" /></div>
      <div><strong>Categoría:</strong> <input type="text" id="editCategory" class="swal2-input" value="${category}" /></div>
    `,
    icon: 'info',
    showCancelButton: true,
    confirmButtonText: 'Aceptar',
    cancelButtonText: 'Cancelar',
    preConfirm: () => {
      // Recuperamos los valores editados
      return {
        title: document.getElementById('editTitle').value,
        description: document.getElementById('editDescription').value,
        price: document.getElementById('editPrice').value,
        product_number: document.getElementById('editCode').value,
        stock: document.getElementById('editStock').value,
        category: document.getElementById('editCategory').value
      };
    }
  }).then((result) => {
    if (result.isConfirmed) {
      // Llamada a la API para actualizar el producto
      const editedProduct = result.value;
      fetch(`/api/products/${_id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(editedProduct) // Enviamos los datos editados en el cuerpo de la petición
      })
      .then(response => response.json())
      .then(updatedProduct => {
        if (updatedProduct) {
          Swal.fire(
            'Editado!',
            'El producto ha sido editado.',
            'success'
          );
          location.reload(); // Recarga la vista
        }
      })
      .catch(err => {
        console.error('Error al editar producto:', err);
        Swal.fire(
          'Error!',
          'Hubo un problema al actualizar el producto.',
          'error'
        );
      });
    }
  });
}







  </script>

</body>


</html>